{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isValidTitle","titleValidation","isValidimgUrl","imgUrlValidation","isValidimdbUrl","imdbUrlValidation","isValidimdbId","imdbIdValidation","urlRegExp","blureHandler","event","target","name","value","test","disabledButton","onSubmit","preventDefault","type","classNames","placeholder","onChange","onBlur","disabled","App","moviesFromServer","setMovies","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.947934e8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [isValidTitle, titleValidation] = useState(true);\n  const [isValidimgUrl, imgUrlValidation] = useState(true);\n  const [isValidimdbUrl, imdbUrlValidation] = useState(true);\n  const [isValidimdbId, imdbIdValidation] = useState(true);\n\n  const clearFrom = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  // eslint-disable-next-line max-len\n  const urlRegExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      addMovie(movie);\n      clearFrom();\n    }\n\n    if (!title) {\n      titleValidation(false);\n    }\n\n    if (!imgUrl) {\n      imgUrlValidation(false);\n    }\n\n    if (!imdbUrl) {\n      imdbUrlValidation(false);\n    }\n\n    if (!imdbId) {\n      imdbIdValidation(false);\n    }\n  };\n\n  const blureHandler = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        if (!title) {\n          titleValidation(false);\n        }\n\n        break;\n\n      case 'imgUrl':\n        if (!imgUrl || !urlRegExp.test(value)) {\n          imgUrlValidation(false);\n        }\n\n        break;\n\n      case 'imdbUrl':\n        if (!imdbUrl || !urlRegExp.test(value)) {\n          imdbUrlValidation(false);\n        }\n\n        break;\n\n      case 'imdbId':\n        if (!imdbId) {\n          imdbIdValidation(false);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const disabledButton = (!titleValidation || !imgUrlValidation\n    || !imdbUrlValidation || !imdbIdValidation);\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"title\"\n        className={classNames('input is-success', {\n          'input is-danger': !isValidTitle,\n        })}\n        data-cy=\"form-title\"\n        placeholder=\"Add a title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        onBlur={blureHandler}\n      />\n\n      {!isValidTitle && <p>Please, enter the title</p>}\n\n      <input\n        type=\"text\"\n        name=\"description\"\n        className=\"input is-success\"\n        data-cy=\"form-description\"\n        placeholder=\"Add a description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n      />\n\n      <input\n        type=\"url\"\n        name=\"imgUrl\"\n        className={classNames('input is-success', {\n          'input is-danger': !isValidimgUrl,\n        })}\n        data-cy=\"form-imgUrl\"\n        placeholder=\"Add an image's url\"\n        value={imgUrl}\n        onChange={(event) => setImgUrl(event.target.value)}\n        onBlur={blureHandler}\n      />\n\n      {!isValidimgUrl && <p>Please, enter the url of image</p>}\n\n      <input\n        type=\"url\"\n        name=\"imdbUrl\"\n        className={classNames('input is-success', {\n          'input is-danger': !isValidimdbUrl,\n        })}\n        data-cy=\"form-imdbUrl\"\n        placeholder=\"Add an IMDB url\"\n        value={imdbUrl}\n        onChange={(event) => setImdbUrl(event.target.value)}\n        onBlur={blureHandler}\n      />\n\n      {!isValidimdbUrl && <p>Please, enter the url of movie</p>}\n\n      <input\n        type=\"text\"\n        name=\"imdbId\"\n        className={classNames('input is-success', {\n          'input is-danger': !isValidimdbId,\n        })}\n        data-cy=\"form-imdbId\"\n        placeholder=\"Add a movie's id\"\n        value={imdbId}\n        onChange={(event) => setImdbId(event.target.value)}\n        onBlur={blureHandler}\n      />\n\n      {!isValidimdbId && <p>Please, enter the id</p>}\n\n      <button\n        type=\"submit\"\n        className=\"button is-primary\"\n        disabled={disabledButton}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovie) => ([...prevMovie, movie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}